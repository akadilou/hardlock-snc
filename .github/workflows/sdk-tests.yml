name: sdk-tests
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  linux_c_echo_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: build cdylib
        run: |
          cargo build --manifest-path Cargo.toml --release
          ls -la target/release
      - name: compile C echo using FFI
        run: |
          set -e
          mkdir -p c
          cat > c/app.c <<'C'
          #include <stdio.h>
          #include <stdint.h>
          #include <string.h>
          #include "hardlock_snc.h"
          int main(void){
            uint8_t out_ct[8192]; size_t ct_len=sizeof(out_ct);
            uint8_t out_pt[8192]; size_t pt_len=sizeof(out_pt);
            const char* msg = "hello_tufkey";
            void* s = hl_snc_session_new_initiator();
            if(!s) return 10;
            if(hl_snc_encrypt(s,(const uint8_t*)msg,strlen(msg),out_ct,&ct_len)!=0) return 11;
            if(hl_snc_decrypt(s,out_ct,ct_len,out_pt,&pt_len)!=0) return 12;
            hl_snc_session_free(s);
            fwrite(out_pt,1,pt_len,stdout);
            return 0;
          }
          C
          cc c/app.c -o c/app -I include -L target/release -lhardlock_snc -Wl,-rpath,'$ORIGIN/../target/release'
      - name: run echo and assert
        run: |
          set -e
          out="$(./c/app)"
          echo "OUT=$out"
          [ "$out" = "hello_tufkey" ]

  android_kotlin_gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - uses: nttld/setup-ndk@v1
        id: ndk
        with:
          ndk-version: r26d
      - name: build android .so (arm64-v8a)
        run: |
          set -e
          echo "ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          rustup target add aarch64-linux-android
          cargo install cargo-ndk
          cargo ndk --platform 24 -t arm64-v8a -o target/android build --manifest-path Cargo.toml --release
          test -f target/android/arm64-v8a/release/libhardlock_snc.so
          ls -la target/android/arm64-v8a/release
      - uses: actions/upload-artifact@v4
        with:
          name: android-arm64-v8a
          path: target/android/arm64-v8a/release/libhardlock_snc.so
