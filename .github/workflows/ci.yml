name: ci
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt
      - uses: swatinem/rust-cache@v2
      - run: cargo clippy --workspace --all-features -- -W clippy::pedantic
      - run: cargo fmt --all --check
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
      - run: cargo test --workspace --all-features --locked
  deny:
    name: cargo-deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny
      - uses: swatinem/rust-cache@v2
      - run: cargo deny check
  geiger:
    name: geiger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-geiger
      - uses: swatinem/rust-cache@v2
      - run: cargo geiger -q --all-features --output-format Json > geiger.json
      - uses: actions/upload-artifact@v4
        with:
          name: geiger-${{ github.run_id }}
          path: geiger.json
  coverage:
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin
      - uses: swatinem/rust-cache@v2
      - run: cargo tarpaulin --workspace --all-features --out Xml --output-dir target/tarpaulin
      - uses: actions/upload-artifact@v4
        with:
          name: cobertura-${{ github.run_id }}
          path: target/tarpaulin/cobertura.xml
  all-green:
    name: gate
    runs-on: ubuntu-latest
    needs: [lint,test,deny,geiger,coverage]
    steps:
      - run: echo ok
