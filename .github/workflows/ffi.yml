name: ffi
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
concurrency:
  group: ffi-${{ github.ref }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
  c_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt-get update && sudo apt-get install -y clang pkg-config
      - run: cargo build --release --locked
      - uses: taiki-e/install-action@v2
        with:
          tool: cbindgen
      - run: cbindgen --output hardlock_snc.h
      - uses: actions/upload-artifact@v4
        with:
          name: ffi-linux-${{ github.run_id }}
          path: |
            target/release/lib*.so
            hardlock_snc.h
  ios_xcframework:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup target add aarch64-apple-ios aarch64-apple-ios-sim
      - run: cargo build --release --target aarch64-apple-ios
      - run: cargo build --release --target aarch64-apple-ios-sim
      - run: mkdir -p build/ios/device build/ios/sim
      - run: ls -lt target/aarch64-apple-ios/release
      - run: ls -lt target/aarch64-apple-ios-sim/release
      - id: pick_dev
        run: echo "LIB_DEV=$(ls -t target/aarch64-apple-ios/release/lib*.a | head -n1)" >> $GITHUB_OUTPUT
      - id: pick_sim
        run: echo "LIB_SIM=$(ls -t target/aarch64-apple-ios-sim/release/lib*.a | head -n1)" >> $GITHUB_OUTPUT
      - run: cp "${{ steps.pick_dev.outputs.LIB_DEV }}" build/ios/device/
      - run: cp "${{ steps.pick_sim.outputs.LIB_SIM }}" build/ios/sim/
      - uses: taiki-e/install-action@v2
        with:
          tool: cbindgen
      - run: cbindgen --output hardlock_snc.h
      - run: |
          DEV_LIB=$(basename "$(ls -t build/ios/device/lib*.a | head -n1)")
          SIM_LIB=$(basename "$(ls -t build/ios/sim/lib*.a | head -n1)")
          xcodebuild -create-xcframework \
            -library "build/ios/device/${DEV_LIB}" -headers hardlock_snc.h \
            -library "build/ios/sim/${SIM_LIB}" -headers hardlock_snc.h \
            -output HardlockSNC.xcframework
      - uses: actions/upload-artifact@v4
        with:
          name: ffi-ios-${{ github.run_id }}
          path: |
            HardlockSNC.xcframework
            hardlock_snc.h
  android_jni:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-ndk
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
      - run: rustup target add aarch64-linux-android
      - run: cargo ndk -t arm64-v8a -o target/android build --release
      - uses: taiki-e/install-action@v2
        with:
          tool: cbindgen
      - run: cbindgen --output hardlock_snc.h
      - uses: actions/upload-artifact@v4
        with:
          name: ffi-android-${{ github.run_id }}
          path: |
            target/android/arm64-v8a/release/lib*.so
            hardlock_snc.h
